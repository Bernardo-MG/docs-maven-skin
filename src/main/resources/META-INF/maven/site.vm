#*
 * Copyright 2012 Andrius Velykis
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
#*--------------------------------------------------*#
#**
 * Initialization macro.
 *#
#*--------------------------------------------------*#
#set ( $bodyContent = $html5UpdateTool.updateCodeSections( $bodyContent ) )
#set ( $bodyContent = $html5UpdateTool.updateSectionDiv( $bodyContent ) )
#set ( $bodyContent = $html5UpdateTool.fixInternalLinks( $bodyContent ) )
#set ( $bodyContent = $html5UpdateTool.removeExternalLinks( $bodyContent ) )
#set ( $bodyContent = $html5UpdateTool.removeNoHrefLinks( $bodyContent ) )
#set ( $bodyContent = $html5UpdateTool.updateTables( $bodyContent ) )
#set ( $bodyContent = $siteTool.transformTables( $bodyContent ) )
#set ( $bodyContent = $siteTool.transformImagesToFigures( $bodyContent ) )
#set ( $bodyContent = $siteTool.transformIcons( $bodyContent ) )
#set ( $bodyContent = $siteTool.fixReport($bodyContent, $config.fileId) )
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"#if ( $locale ) lang="$locale.language"#end>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=${outputEncoding}"/>
    <meta charset='${outputEncoding}'>

    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

    <!-- IE Compatibility tag -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

#if( !$config.fileId.equals('index') )
    <title>$title</title>
#else
    <title>$project.name</title>
#end

    <!-- Metadata -->
    <meta name="description" content="$config.descriptionUrl.getValue()">
    <meta name="keywords" content="$config.keywords.getValue()">
#foreach ( $author in $project.developers )
    <meta name="author" content="$author.name" />
#end

    <!-- Facebook OpenGraph -->
    <meta property="og:type" content="website"/>
    <meta property="og:url" content="$config.canonicalLink.getValue()"/>
    <meta property="og:site" content="$title"/>
    <meta property="og:title" content="$title"/>
    <meta property="og:description" content="$config.descriptionUrl.getValue()"/>

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary"/>
    <meta name="twitter:site" content="$config.twitterSite.getValue()"/>
    <meta name="twitter:title" content="$title"/>
    <meta name="twitter:description" content="$config.descriptionUrl.getValue()"/>

    <!-- CSS -->
    <link rel="stylesheet" href="./lib/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="./lib/font-awesome-4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="./lib/highlight/styles/default.css">
    <!-- Docs Template style -->
    <link rel="stylesheet" href="./css/docs.css">

    <!-- HTML5 Shiv. For IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
    <script src="./lib/html5shiv/html5shiv.min.js"></script>
    <![endif]-->
        
</head>
<body class="page-$config.fileId project-$config.projectId">
<header class="header">
    <nav id="navbar-main" class="navbar navbar-main navbar-default navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
                        data-target="#navbar-main-body"
                        aria-expanded="false" aria-controls="navbar-main">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="./index.html">$project.name</a>
            </div>

            <div id="navbar-main-body" class="navbar-body navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
#buildIconsMenu()
#if ( $decoration.body.menus )
#if ( $config.topNav )
#filterMenusBig( $decoration.body.menus, $config.topNav.getChildren() )
#else
#set ( $menuColumns = $decoration.body.menus )
#end
#topMenu ( $menuColumns )
#end
                </ul>
            </div>
        </div>
    </nav>
</header>
<section id="main-section" class="container">
	#if ( $config.sections )
	#bodySections ( $bodyContent $config.sections )
	#else
	#bodyWithHeader ( $bodyContent )
	#end
    <p class="pull-right internal-link"><a href="#main-section">Back to top</a></p>
</section>
<footer class="footer">
    <div class="footer-content">
        <div class="container-fluid">
            <div class="row">
                <div id="navbar-footer" class="col-md-10 col-sm-12 col-xs-12">
                    <div class="row">
#if( $decoration.body.menus )
#bottomNav ()
#end
                    </div>
                </div>
                <div class="footer-info col-md-2 col-sm-12 col-xs-12">
                    <div class="row">
                        <div class="col-md-0 col-sm-4 col-xs-0"></div>
                        <div class="col-md-12 col-sm-4 col-xs-12">
                            <dl class="dl-horizontal">
                                <dt id="project-version">Version</dt>
                                <dd>${project.version}</dd>
                                <dt id="project-published">Published</dt>
                                <dd><time>#publishDate ()</time></dd>
#buildVersionsList ()
                            </dl>
                        </div>
                        <div class="col-md-0 col-sm-4 col-xs-0"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container copyright">
            <ul class="list-copyright list-unstyled">
                <li>#copyright ()</li>
                <li>#license ()</li>
            </ul>
        </div>
    </div>
</footer>
<script src="./lib/jquery/jquery-1.11.3.min.js"></script>
<script src="./lib/bootstrap/js/bootstrap.min.js"></script>
<script src="./js/chevron-toggle.js"></script>
<script src="./js/smooth-scroll.js"></script>
<script src="./lib/highlight/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
</body>
</html>
#*--------------------------------------------------*#
#**
 * Convenience directive to invoke a macro and ignore the return value.
 *
 * Usage:
 *		#call ( $hashtable.put("foo", "bar") )
 *
 * Receives:
 *		foo: the macro to call
 *#
#*--------------------------------------------------*#
#macro ( call $foo )#if ($foo)#end#end
#*



*#
#*--------------------------------------------------*###
#**
 * Checks if the given link is the currently active one
 *
 * Receives:
 *		href: the link to check
 *#
#*--------------------------------------------------*#
#macro ( activeLink $href )
#if ( $href )
#if ( '' == $href || ( $alignedFileName.endsWith("index.html") && './' == $href ) )
## Link is empty or it is the index, which is also being shown
#set ( $activeLink = true )
#set ( $activeClass = 'active' )
#else
#set ( $activeLink = false )
#set ( $activeClass = '' )
#end
#else
#set ( $activeLink = false )
#set ( $activeClass = 'disabled' )
#end## /if ( $href )
#end## /activeLink
#*



*#
#*--------------------------------------------------*###
#**
 * Creates a class="name" attribute if the given name exists
 *#
#*--------------------------------------------------*#
#macro ( classAttr $name )
#if ( $name && '' != $name )class="$name"#end
#end 
#*



*#
#*--------------------------------------------------*###
#**
 * Creates dropdown menu items
 *#
#*--------------------------------------------------*#
#macro ( topMenu $menus )
#foreach ( $menu in $menus )
#if ( $menu.name )
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">$menu.name<span class="chevron_toggleable fa fa-chevron-up" aria-hidden="true"></span></a>
                        <ul class="dropdown-menu" role="menu">
#foreach ( $item in $menu.items )
#activeLink ( $item.href )
                            <li#classAttr( $activeClass )>#link ( $item.href $item.name $item.target )</li>
#end
                        </ul>
                    </li>
#end#end#end
#*



*#
#*--------------------------------------------------*###
#**
 * Outputs a list of links
 *#
#*--------------------------------------------------*#
#macro ( links $links )
#foreach ( $item in $links )
#activeLink ( $item.href )
<li#classAttr( $activeClass )>#link ( $item.href $item.name $item.target )</li>
#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Shortcut to display a basic hyperlink
 *#
#*--------------------------------------------------*#
#macro ( link $href $name $target )
#fullLink ( $href $name $target false )
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Outputs a hyperlink with image and other attributes
 *#
#*--------------------------------------------------*#
#macro ( fullLink $href $name $target $alt)
<a#if ( $href ) href="$href"#end#if ( $name ) title="$name"#end#if ( $target ) target="$target"#end>${name}</a>#end
#*



*#
#*--------------------------------------------------*###
#**
 * Partitions the body contents into sections with possibly different representations.
 * Available body types, indicated in custom page config `sections` tag:
 *
 * 	<sections>
 * 		<body/> - the main body of the page
 * 		<thumbs>x</thumbs> - x-column grid layout for thumbnails (first image is used as thumbnail)
 * 		<columns>x</columns> - x-column grid layout
 * 		<carousel/> - carousel (spinning images with captions)
 * 	</sections>
 *#
#*--------------------------------------------------*#
#macro ( bodySections $bodyContent $sectionConfig )
#set ( $sections = $htmlTool.split( $bodyContent, "hr" ) )
#set ( $sectCount = $sectionConfig.getChildCount() )
#set ( $lastBody = false )
#set ( $bodyFound = false )
#set ( $sectIndex = 0 )
#foreach ($section in $sections)
#if ( $sectIndex < $sectCount )
#set ( $sectType = $sectionConfig.getChild($sectIndex).getName() )
#set ( $sectTypeValue = $sectionConfig.getChild($sectIndex).getValue() )
#else
#set ( $sectType = 'body' )#
#end## /if ( $sectIndex < $sectCount )
#if ( 'columns' == $sectType )
#set ( $subsections = $htmlTool.splitOnStart( $section, "h1, h2, h3, h4, h5, h6") )
#if ( $lastBody )
        </div>
    </div>
#end## /if ( 'columns' == $sectType )
#columns ( $sectTypeValue $subsections )
#set ( $lastBody = false )
#else
#set ( $subsections = [ $section ] )
#if ( !$lastBody )
    <div class="row">
        <div class="span12">
#else
                <hr />
#end## /foreach ($section in $sections)
#foreach ( $subsection in $subsections )
#if ( !$bodyFound )
#bodyWithHeader ( $subsection )
#else
                $subsection
#end
#set ( $bodyFound = true )
#end
#set ( $lastBody = true )
#end
#set ( $sectIndex = $sectIndex + 1 )
#end
#if ( $lastBody )
        </div>
    </div>
#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Outputs subsections into a column grid
 *#
#*--------------------------------------------------*#
#macro ( columns $colCount $subsections )
#set ( $colCount = $convert.toNumber($colCount) )
    <div class="row">
#set ( $colSpan = 12 / $colCount )
#set ( $i = 1 )
#foreach ( $subsection in $subsections )
        <div class="col-md-$colSpan col-sm-12 col-xs-12">
            $subsection
        </div>
#set ( $mod = $i % $colCount )
#if ( $mod == 0 )
    </div>
    <div class="row">
#end
#set ( $i = $i + 1 )
#end
    </div>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Renders copyright year (inception-currentDate) and organization.
 *#
#*--------------------------------------------------*#
#macro ( copyright )
#if ( $project )
#set ( $currentYear = ${currentDate.year} + 1900 )
<span class="fa fa-copyright"></span>${project.inceptionYear}
#if ( ${project.inceptionYear} && ( ${project.inceptionYear} != ${currentYear.toString()} ) )-${currentYear}
#end
#if ( ${project.organization} && ${project.organization.name} )
#if ( ${project.organization.url} )
<a href="$project.organization.url">${project.organization.name}</a>
#else
${project.organization.name}
#end
#end
#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Renders copyright year (inception-currentDate) and organization.
 *#
#*--------------------------------------------------*#
#macro ( license )
#if ( $project.licenses && $project.licenses[0] )
Code released under the <a href="$project.licenses[0].url">$project.licenses[0].name</a>
#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Recursively checks if any of the submenu items is the current one
 *#
#*--------------------------------------------------*#
#macro ( displayTree $item )
	#if ( $item && $item.items && $item.items.size() > 0 )
		#foreach ( $subitem in $item.items )
			#activeLink ( $subitem.href )
			#if ( $activeLink )
				#set ( $displayTree = true )
			#end
			#displayTree ( $subitem )
		#end
	#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Recursively outputs menu item and its children
 *#
#*--------------------------------------------------*#
#macro ( menuItem $item )
	#set ( $collapseClass = false )
	#activeLink ( $item.href )
	#set ( $active = $activeLink )
	#if ( $active )
		#set ( $currentLink = "#" )
	#else
		#set ( $currentLink = $item.href )
	#end
						<li #classAttr( $activeClass )>
							#fullLink ( $currentLink $item.name $item.target $item.alt)
						</li>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Recursively outputs menu item and its children
 *#
#*--------------------------------------------------*#
#macro ( listItem $item )
#activeLink ( $item.href )
#set ( $active = $activeLink )
#if ( $active )
#set ( $currentLink = "#" )
#else
#set ( $currentLink = $item.href )
#end
                                <dd #classAttr( $activeClass )>#fullLink ( $currentLink $item.name $item.target $item.alt)</dd>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Creates a list menu with submenus
 *#
#*--------------------------------------------------*#
#macro ( listMenu $menu )
                            <dl class="dl-nav">
#if ( $menu.name )
                                <dt>$menu.name</dt>
#end
#if ( $menu.items && $menu.items.size() > 0 )
#foreach ( $item in $menu.items )
#listItem ( $item )
#end
#end
                            </dl>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Filters menus by their ref or name, and returns the matching results.
 * The regex is used to check the match
 *#
#*--------------------------------------------------*#
#macro ( filterMenus $menus $filterRegex )
#foreach ($menu in $menus)
#if ( ( $menu.ref && $menu.ref == $filterRegex ) || ( $menu.name && $menu.name == $filterRegex ) )
#set ( $filteredMenu = $menu )
#end
#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Filters menus by their ref or name, and returns the matching results.
 * The regex is used to check the match
 *#
#*--------------------------------------------------*#
#macro ( filterMenusBig $menus $menuNames )
#set ( $menuColumns = [] )
#foreach ( $menuName in $menuNames )
#filterMenus ( $menus, $menuName.getValue() )
#if ( $filteredMenu )
#call ( $menuColumns.add( $filteredMenu ) )
#end
#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Outputs bottom navigation columns. The menus can be split into columns to be
 * placed in the bottom navigation. This is done with the `bottomNav` config option:
 *
 * 	<bottomNav maxSpan="8"> - maximum span is indicated in the attribute (default =9)
 * 		<column>regex</column> - indicates to add a column with the indicated regex filter
 * 		<column>regex</column> - ...
 * 		<column>regex</column> - ...
 * 	</bottomNav>
 *
 * (The above produces a 3-column navigation with `span2` for each column (because max is 8)).
 *#
#macro ( bottomNav )
#set ( $maxNavSpan = 12 )
#if ( $config.bottomNav && $config.bottomNav.getChildCount() > 0 )
#filterMenusBig( $decoration.body.menus, $config.bottomNav.getChildren() )
#else
#set ( $menuColumns = $decoration.body.menus )
#end
#set ( $menuCount = ($menuColumns.size() + 2) )
#set ( $navSpan = $maxNavSpan / $menuCount )
#if ( $navSpan <= 0 )
#set ( $navSpan = 1 )
#end
#set ( $lastNavSpan = $maxNavSpan - ($navSpan * ($menuCount - 1)) )
#set ( $navColIndex = 0 )
#foreach ( $menuCol in $menuColumns )
#if ( $navColIndex == $menuCount - 1 )
#set ( $navSpan = $lastNavSpan )
#end
                       <div class="col-md-$navSpan col-sm-12 col-xs-12">
#listMenu ( $menuCol )
                       </div>
#set ( $navColIndex = $navColIndex + 1 )
#end
                       <div class="col-md-$navSpan col-sm-12 col-xs-12">
#codeBottomMenu()
                       </div>
                       <div class="col-md-$navSpan col-sm-12 col-xs-12">
#releasesBottomMenu()
                       </div>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Displays a 'Last published' date message.
 *#
#*--------------------------------------------------*#
#macro ( releasesBottomMenu )
							<dl class="dl-nav">
                                <dt>Releases repositories</dt>
#foreach ( $releasesRepo in $config.releaseRepositories.getChildren() )
                                <dd><a href="$releasesRepo.getChild('url').getValue()">$releasesRepo.getChild('name').getValue()</a></dd>
#end
                            </dl>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Displays a 'Last published' date message.
 *#
#*--------------------------------------------------*#
#macro ( codeBottomMenu )
							<dl class="dl-nav">
                                <dt>Code</dt>
#if( $project.scm )
                                <dd><a href="$project.scm.url" class="link-noted">SCM
#if ($project.scm.url.matches('.*github\.com.*'))
                                 <span class="note">GitHub</span>
#end
                                </a></dd>
#end
#if( $project.ciManagement )
                                <dd><a href="$project.ciManagement.url" class="link-noted">CI
                                 <span class="note">$project.ciManagement.system</span>
                                </a></dd>
#end
#if( $project.issueManagement )
                                <dd><a href="$project.issueManagement.url" class="link-noted">Issues
                                 <span class="note">$project.issueManagement.system</span>
                                </a></dd>
#end
                            </dl>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Displays a 'Last published' date message.
 *#
#*--------------------------------------------------*#
#macro ( publishDate )
#set ( $format = "yyyy-MM-dd" )
##$dateFormat.applyPattern( $format )
#set ( $dateValue = $dateFormat.format( $currentDate ) )
$dateValue#end
#*



*#
#*--------------------------------------------------*###
#**
 * Outputs XML DOM objects as html elements into the rendered document.
 * Taken from maven-fluido-skin.
 *#
#*--------------------------------------------------*#
#macro ( htmlContent $items )
	#foreach ( $item in $items )
		#set ( $itemHtml = $item.toString().trim() )
		#set ( $documentHeader = '<?xml version="1.0" encoding="UTF-8"?>' )
		#if ( $item.name == "script" )
			#set ( $itemHtml = $StringUtils.replace( $item.toUnescapedString(), $documentHeader, "" ) )
		#else
			#set ( $itemHtml = $StringUtils.replace( $item.toString(), $documentHeader, "" ) )
		#end
		#evaluate ( $itemHtml )
	#end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Marks the first header inside the content as page header, by wrapping it into
 * a div with `page-header` class
 *#
#*--------------------------------------------------*#
#macro ( bodyWithHeader $content )
	#set ( $bodyWithHeader = $htmlTool.wrap($content, "h1", '<header class="page-header"></header>') )
	$bodyWithHeader
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Builds icons menu
 *#
#*--------------------------------------------------*#
#macro ( buildIconsMenu )
				<li>
                    <ul class="list-unstyled icons-list-inline">
#if ($project.scm)
#if ($project.scm.url.matches('.*github\.com.*'))
                        <li><a href="$project.scm.url" title="GitHub" aria-label="GitHub"><span
                                class="navbar-icon fa fa-inverse fa-github"
                                aria-hidden="true"></span></a></li>
#end
#end
                    </ul>
                </li>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Builds supported Java versions list
 *#
#*--------------------------------------------------*#
#macro ( buildVersionsList )
#if ($config.interpreters)
                                <dt id="project-works-on">Tested on</dt>
#foreach ( $interpreter in $config.interpreters.getChildren() )
                                <dd>$interpreter.getValue()</dd>
#end
#end
#end