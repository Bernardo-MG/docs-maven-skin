#*
 * The MIT License (MIT)
 * 
 * Copyright (c) 2015 Bernardo Mart√≠nez Garrido
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *#
#*--------------------------------------------------*#
#**
 * Body content is modified and edited by the various utilities.
 *#
#*--------------------------------------------------*#
#set( $bodyContent = $html5UpdateTool.updateCodeSections( $bodyContent ) )
#set( $bodyContent = $html5UpdateTool.updateSectionDiv( $bodyContent ) )
#set( $bodyContent = $html5UpdateTool.fixInternalLinks( $bodyContent ) )
#set( $bodyContent = $html5UpdateTool.removeExternalLinks( $bodyContent ) )
#set( $bodyContent = $html5UpdateTool.removeNoHrefLinks( $bodyContent ) )
#set( $bodyContent = $html5UpdateTool.updateTables( $bodyContent ) )
#set( $bodyContent = $siteTool.transformTables( $bodyContent ) )
#set( $bodyContent = $siteTool.fixReport($bodyContent, $config.fileId) )
#set( $bodyContent = $siteTool.transformIcons( $bodyContent ) )
#set( $bodyContent = $siteTool.transformImagesToFigures( $bodyContent ) )
#set( $bodyContent = $siteTool.fixHeadingIds($bodyContent) )
#set( $bodyContent = $siteTool.fixAnchorLinks($bodyContent) )
<!DOCTYPE html>
<!--
 Generated by Apache Maven Doxia#if( $doxiaVersion ) $doxiaVersion#end the $dateFormat.format( $currentDate )
 Rendered using @project.name@ @project.version@ (@project.url@)
-->
<html xmlns="http://www.w3.org/1999/xhtml"#if( $locale ) lang="$locale.language"#end>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=${outputEncoding}"/>
    <meta charset='${outputEncoding}'>

    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

    <!-- IE Compatibility tag -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

#if( !$config.fileId.equals('index') )
    <title>$title</title>
#else
    <title>$project.name</title>
#end
    <link href="./favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!-- Metadata -->
#if($config.descriptionUrl)
    <meta name="description" content="$config.descriptionUrl.getValue()">
#end
#if($config.keywords)
    <meta name="keywords" content="$config.keywords.getValue()">
#end
#foreach( $author in $project.developers )
    <meta name="author" content="$author.name" />
#end

    <!-- Facebook Open Graph -->
    <meta property="og:type" content="website"/>
#if($config.canonicalLink)
    <meta property="og:url" content="$config.canonicalLink.getValue()"/>
#end
    <meta property="og:site" content="$title"/>
    <meta property="og:title" content="$title"/>
#if($config.descriptionUrl)
    <meta property="og:description" content="$config.descriptionUrl.getValue()"/>
#end

#if($config.twitterSite)
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary"/>
    <meta name="twitter:site" content="$config.twitterSite.getValue()"/>
    <meta name="twitter:title" content="$title"/>
#**##if($config.descriptionUrl)
    <meta name="twitter:description" content="$config.descriptionUrl.getValue()"/>
#**##end
#end

    <!-- CSS -->
    <link rel="stylesheet" href="./lib/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="./lib/font-awesome-4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="./lib/highlight/styles/default.css">
    <!-- Docs Template style -->
    <link rel="stylesheet" href="./css/style.css">

    <!-- HTML5 Shiv. For IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
    <script src="./lib/html5shiv/html5shiv.min.js"></script>
    <![endif]-->
        
</head>
<body>
<header class="header">
    <nav id="navbar-main" class="navbar navbar-main navbar-default navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
                        data-target="#navbar-main-body"
                        aria-expanded="false" aria-controls="navbar-main">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="./index.html">$project.name</a>
            </div>

            <div id="navbar-main-body" class="navbar-body navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
#buildIconsMenu()
#if( $decoration.body.menus )
#**##if( $config.topNav )
#*    *##findMenus( $decoration.body.menus, $config.topNav.getChildren() )
#**##else
#*    *##set( $menuColumns = $decoration.body.menus )
#**##end
#**##dropdownMenu ( $menuColumns )
#end
                </ul>
            </div>
        </div>
    </nav>
</header>
<section id="main-section" class="container">
#wrapFirstHeading ( $bodyContent )
    <p class="pull-right internal-link"><a href="#main-section">Back to top</a></p>
</section>
<footer class="footer">
    <div class="footer-content">
        <div class="container-fluid">
            <div class="row">
                <div id="navbar-footer" class="col-md-9 col-sm-12 col-xs-12">
                    <div class="row">
#if( $decoration.body.menus )
#**##bottomNav()
#end
                    </div>
                </div>
                <div class="footer-info col-md-3 col-sm-12 col-xs-12">
                    <div class="row">
                        <div class="col-md-12 col-sm-4 col-xs-12">
                            <dl class="dl-horizontal">
                                <dt id="project-version">Version</dt>
                                <dd>${project.version}</dd>
                                <dt id="project-published">Published</dt>
                                <dd><time>#publishDate()</time></dd>
#buildVersionsList()
                            </dl>
                        </div>
                        <div class="col-md-0 col-sm-4 col-xs-0"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container copyright">
            <ul class="list-copyright list-unstyled">
                <li>#copyright()</li>
                <li>#license()</li>
            </ul>
            <ul class="list-unstyled">
                <li>Rendered using <a href="@project.url@">@project.name@</a> @project.version@</li>
            </ul>
        </div>
    </div>
</footer>
<script src="./lib/jquery/jquery-1.11.3.min.js"></script>
<script src="./lib/bootstrap/js/bootstrap.min.js"></script>
<script src="./js/chevron-toggle.js"></script>
<script src="./js/smooth-scroll.js"></script>
<script src="./js/heading-numbering.js"></script>
<script src="./lib/highlight/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
</body>
</html>
#*--------------------------------------------------*###
#**
 * Creates a dropdown menu with the received menus as the selection options.
 *
 * The menu items are meant to come from the decoration XML file.
 *
 * Receives:
 *        menus: a list of menus to process. These are Doxia decoration menus.
 *#
#*--------------------------------------------------*#
#macro( dropdownMenu $menus )
#**##foreach( $menu in $menus )
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">$menu.name <span class="chevron_toggleable fa fa-chevron-up" aria-hidden="true"></span></a>
                        <ul class="dropdown-menu" role="menu">
#*    *##foreach( $item in $menu.items )
                            <li><a href="$item.href" title="$item.name">$item.name</a></li>
#*    *##end
                        </ul>
                    </li>
#**##end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Renders the copyright year and organization.
 *
 * This will show the copyright logo, followed by the year and the organization data.
 * 
 * If the inception year is the current year, this will be the shown year. Otherwise
 * the inception year followed by the current year will be used, separating
 * them with a hyphen.
 *
 * If there is no inception year then the current year will be shown.
 *
 * For the organization, its name and URL will be used to create a link.
 *
 *#
#*--------------------------------------------------*#
#macro( copyright )
#**##if( $project )
#*    *##set( $currentYear = ${currentDate.year} + 1900 )
#*    *##if( ${project.inceptionYear} )
#*        *##if( ${project.inceptionYear} != ${currentYear.toString()} ) <span class="fa fa-copyright"></span>${project.inceptionYear}-${currentYear}
#*        *##else <span class="fa fa-copyright"></span>${project.inceptionYear}
#*        *##end
#*    *##else <span class="fa fa-copyright"></span>${currentYear}
#*    *##end
#*    *##if( ${project.organization} && ${project.organization.name} )
#*        *##if( ${project.organization.url} )
<a href="$project.organization.url">${project.organization.name}</a>
#*        *##else
${project.organization.name}
#*        *##end
#*    *##end
#**##end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Renders the license information.
 *
 * This will be the license name and its URL as a link.
 *
 *#
#*--------------------------------------------------*#
#macro( license )
#**##if( $project.licenses && $project.licenses[0] )
Code released under the <a href="$project.licenses[0].url">$project.licenses[0].name</a>
#**##end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Creates a list with links.
 *
 * This will be a definitions list, where each definition is a link.
 *
 * The menu item is meant to come from the decoration XML file.
 *
 * Receives:
 *        menu: Doxia decoration menu to build the list menu
 *#
#*--------------------------------------------------*#
#macro( linksList $menu )
                            <dl class="dl-nav">
#**##if( $menu.name )
                                <dt>$menu.name</dt>
#**##end
#**##if( $menu.items )
#*    *##foreach( $item in $menu.items )
                                <dd><a href="$item.href" title="$item.name">$item.name</a></dd>
#*    *##end
#**##end
                            </dl>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Finds a menu based on its name.
 *
 * Will iterate over the received menus, and will set the last menu found with
 * the given name into the foundMenu variable.
 *
 * If no menu was found then this variable will be set as false.
 *
 * Receives:
 *        menus: Doxia decoration menus collection
 *        menuName: name of the menu to find
 * Returns:
 *        foundMenu: false if no menu was found, contains the menu otherwise
 *#
#*--------------------------------------------------*#
#macro( findMenu $menus $menuName )
#**##set( $foundMenu = false )
#**##foreach($menu in $menus)
#*    *##if( ( $menu.ref && $menu.ref == $menuName ) || ( $menu.name && $menu.name == $menuName ) )
#*        *##set( $foundMenu = $menu )
#*    *##end
#**##end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Finds a collection of menus based on their names.
 *
 * Will iterate over the received menus, and will load all the found menus
 * inside the menuColumns variable.
 *
 * Receives:
 *        menus: Doxia decoration menus collection
 *        menuNames: names of the menus to find
 * Returns:
 *        menuColumns: an array with all the found menus
 *#
#*--------------------------------------------------*#
#macro( findMenus $menus $menuNames )
#**##set( $menuColumns = [] )
#**##foreach( $menuName in $menuNames )
#*    *##findMenu ( $menus, $menuName.getValue() )
#*    *##if( $foundMenu )
#*        *##if($menuColumns.add( $foundMenu ))#end
#*    *##end
#**##end
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Creates the bottom navigation.
 *#
#*--------------------------------------------------*#
#macro( bottomNav )
#**##set( $maxNavSpan = 12 )
#**##if( $config.bottomNav && $config.bottomNav.getChildCount() > 0 )
#*    *##findMenus( $decoration.body.menus, $config.bottomNav.getChildren() )
#**##else
#*    *##set( $menuColumns = $decoration.body.menus )
#**##end
#**##set( $menuCount = ($menuColumns.size() + 2) )
#**##set( $navSpan = $maxNavSpan / $menuCount )
#**##if( $navSpan <= 0 )
#*    *##set( $navSpan = 1 )
#**##end
#**##set( $lastNavSpan = $maxNavSpan - ($navSpan * ($menuCount - 1)) )
#**##set( $navColIndex = 0 )
#**##foreach( $menuCol in $menuColumns )
#*    *##if( $navColIndex == $menuCount - 1 )
#*        *##set( $navSpan = $lastNavSpan )
#*    *##end
                       <div class="col-md-$navSpan col-sm-12 col-xs-12">
#*    *##linksList ( $menuCol )
                       </div>
#*    *##set( $navColIndex = $navColIndex + 1 )
#**##end
                       <div class="col-md-$navSpan col-sm-12 col-xs-12">
#**##resourcesList()
                       </div>
                       <div class="col-md-$navSpan col-sm-12 col-xs-12">
#**##releasesList()
                       </div>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Creates a list with the releases repositories links.
 * 
 * This will be a definitions list, loaded from the releaseRepositories node
 * in the site configuration file.
 *
 *#
#*--------------------------------------------------*#
#macro( releasesList )
                            <dl class="dl-nav">
                                <dt>Releases repositories</dt>
#**##foreach( $releasesRepo in $config.releaseRepositories.getChildren() )
                                <dd><a href="$releasesRepo.getChild('url').getValue()">$releasesRepo.getChild('name').getValue()</a></dd>
#**##end
                            </dl>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Builds a list menu with the project resources.
 * 
 * This will be a definitions list, generated from the project configuration
 * information.
 *
 *#
#*--------------------------------------------------*#
#macro( resourcesList )
                            <dl class="dl-nav">
                                <dt>Code</dt>
#**##if( $project.scm )
                                <dd><a href="$project.scm.url" class="link-noted">SCM
#*    *##if($project.scm.url.matches('.*github\.com.*'))
                                 <span class="note">GitHub</span>
#*    *##end
                                </a></dd>
#**##end
#**##if( $project.ciManagement )
                                <dd><a href="$project.ciManagement.url" class="link-noted">CI
                                 <span class="note">$project.ciManagement.system</span>
                                </a></dd>
#**##end
#**##if( $project.issueManagement )
                                <dd><a href="$project.issueManagement.url" class="link-noted">Issues
                                 <span class="note">$project.issueManagement.system</span>
                                </a></dd>
#**##end
                            </dl>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Creates the publish date.
 *#
#*--------------------------------------------------*#
#macro( publishDate )
#**##set( $format = "yyyy-MM-dd" )
#**###$dateFormat.applyPattern( $format )
#**##set( $dateValue = $dateFormat.format( $currentDate ) )
$dateValue
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Wraps the first heading inside the content as page header, by wrapping it into
 * a div with `page-header` class
 *
 * Receives:
 *        content: section where the wrapper will be added
 *#
#*--------------------------------------------------*#
#macro( wrapFirstHeading $content )
#**##set( $content = $htmlTool.wrapFirst($content, "h1", '<header class="page-header"></header>') )
    $content
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Builds the icons menu.
 *
 * These are the icons shown in the upper navigation bar.
 *
 *#
#*--------------------------------------------------*#
#macro( buildIconsMenu )
                <li>
                    <ul class="list-unstyled icons-list-inline">
#**##if($project.scm)
#*    *##if($project.scm.url.matches('.*github\.com.*'))
                        <li><a href="$project.scm.url" title="GitHub" aria-label="GitHub"><span
                                class="navbar-icon fa fa-github"
                                aria-hidden="true"></span></a></li>
#*    *##end
#**##end
                    </ul>
                </li>
#end
#*



*#
#*--------------------------------------------------*###
#**
 * Builds the supported Java versions list.
 * 
 * This will be a definitions list, loaded from the interpreters node
 * in the site configuration file.
 *
 *#
#*--------------------------------------------------*#
#macro( buildVersionsList )
#**##if($config.interpreters)
                                <dt id="project-works-on">Tested on</dt>
#*    *##foreach( $interpreter in $config.interpreters.getChildren() )
                                <dd>$interpreter.getValue()</dd>
#*    *##end
#**##end
#end