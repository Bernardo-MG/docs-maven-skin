#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
${symbol_pound} Usage

[Once the dependencies have been set][acquire], the skin can be used by adding the following element to the site.xml file:

```xml
<skin>
   <groupId>com.wandrell.maven</groupId>
   <artifactId>docs-maven-skin</artifactId>
   <version>${project.version}</version>
</skin>
```

${symbol_pound}${symbol_pound} Sample site.xml

The site requires a correctly configured site.xml file to work. For more details check the [site.xml page][site_xml], but the following shows an example of how it should look:

```xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/DECORATION/1.6.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/DECORATION/1.6.0 http://maven.apache.org/xsd/decoration-1.6.0.xsd">

   <skin>
      <groupId>${project.groupId}</groupId>
      <artifactId>${project.artifactId}</artifactId>
      <version>${project.version}</version>
   </skin>

   <custom>
      <skinConfig>
         <keywords>Maven Site, fix, HTML5</keywords>
         <descriptionUrl>Check the documentation for the Docs Maven Skin</descriptionUrl>
         <twitterSite>@wandrell</twitterSite>
         <topNav>
            <menu>Documentation</menu>
            <menu>Info and reports</menu>
         </topNav>
         <bottomNav>
            <menu>General Info</menu>
         </bottomNav>
      </skinConfig>
   </custom>

   <body>
      <menu name="General Info" inherit="top">
         <item name="Acquire" href="./acquire.html" />
         <item name="Usage" href="./usage.html" />
         <item name="Changes Log" href="./changes-report.html" />
      </menu>
      <menu name="Documentation" inherit="bottom">
         <item name="Acquire" href="./acquire.html" />
         <item name="Usage" href="./usage.html" />
         <item name="Tests" href="./tests.html" />
      </menu>
      <menu name="Info and reports" inherit="bottom">
         <item name="Info" href="./info.html" />
         <item name="Reports" href="./reports.html" />
         <item name="JavaDocs" href="./apidocs/" />
      </menu>
   </body>
</project>
```

${symbol_pound}${symbol_pound}${symbol_pound} Variables substitution

It is recommended using Maven's variable substitution to make the file easier to mantain. For example by setting the *site.skin.version* property in the POM the skin configuration ends looking like this:

```xml
<skin>
   <groupId>${project.groupId}</groupId>
   <artifactId>${project.artifactId}</artifactId>
   <version>${symbol_dollar}{project.version}</version>
</skin>
```

[acquire]: ./acquire.html
[site_xml]: ./site_xml.html
