// This script verifies that a minimal site contains only the barebones of a site.

import org.jsoup.Jsoup
import java.util.logging.Logger

// Verifies that all the files were created
[
    'target/site/index.html',
    'target/site/favicon.ico',
    'target/site/robots.txt',
    'target/site/css/style.min.css'
].each {
    def file = new File(basedir, it)
    if (!file.exists()) {
        throw new IllegalStateException(
            "file ${file} doesn't exist"
        )
    }
}

// Acquires the sample HTML content
def html = new File(basedir, 'target/site/index.html').text

// Parses HTML
def parsed = Jsoup.parse(html)
def body = parsed.body()
def head = parsed.head()

// Verified the heading is set
def header = body.select( 'section > header' ).first()
assert header.hasClass( 'pb-2' )
assert header.hasClass( 'mt-4' )
assert header.hasClass( 'mb-2' )
assert header.hasClass( 'border-bottom' )

// Verifies the title is included in the HTML head
def title = head.select( 'title' )
assert title.html().equals( 'minimal-site â€“ Minimal page' )

// Verifies the title is included in the header
def titleHeader = body.select( '#navbar-main a.navbar-brand' )
assert titleHeader.html().equals( 'minimal-site' )
// Verifies the title includes a relative link to the index
assert titleHeader.attr('href').equals( './index.html' )

// Verifies the project version is included
def versionHeader = body.select( '#navbar-version' )
assert versionHeader.html() =~ /1\.0\.0/

// Verifies the project date is included
def dateHeader = body.select( '#navbar-date' )
assert dateHeader.html() =~ /[0-9]+-[0-9]+-[0-9]+/

// Footer link
def div = body.select( 'footer #footer-info div' ).last()
assert div.html().contains( 'Rendered using' )
assert html.contains( 'Rendered using <a href="https://github.com/Bernardo-MG/docs-maven-skin">Docs Maven Skin</a>' )

// Comments before the head
assert html.contains( 'Rendered using Docs Maven Skin' )
assert html.contains( 'Generated by Apache Maven Doxia' )

// Verifies the favicon is included
assert html.contains( '<link href="./favicon.ico" rel="shortcut icon" type="image/x-icon">' )

// Verifies that the footer custom content was not generated
def customFooter = body.select( '#footer-custom-content' )
assert customFooter.isEmpty()

// The custom style file was not generated
def customStyle = head.select( 'link[href="./css/custom.css"]' )
assert customStyle.isEmpty()

// The custom script file was not generated
def customScript = body.select( 'script[src="./js/custom.js"]' )
assert customScript.isEmpty()

// Verifies that the footer menus are not generated
def navbarFooter = body.select( '#navbar-footer' )
assert navbarFooter.isEmpty()

// Verifies that the icon menus are not generated
def iconMenu = body.select( '#navbar-main-menu a' )
assert iconMenu.isEmpty()

// Verifies that the right navigation bar was not generated
def rightNavBar = body.select( '#navbar-main-menu .dropdown-toggle' )
assert rightNavBar.isEmpty()

// Verifies the edition link was not created
def edit = head.select( 'a > span.fa-edit' )
assert edit.isEmpty()

// Verifies Google Analytics was not set up
assert !html.contains( 'Google Analytics' )
