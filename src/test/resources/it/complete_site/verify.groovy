// This script verifies that a complete site contains all the elements. Meaning that this
// test validates that all the common pieces of the site are generated when the Skin
// has all the data it requires.

import com.jcabi.w3c.ValidatorBuilder
import org.hamcrest.MatcherAssert
import org.hamcrest.Matchers
import org.jsoup.Jsoup

// Verifies that all the files were created
[
    'target/site/acquire.html',
    'target/site/index.html',
    'target/site/info.html',
    'target/site/reports.html',
    'target/site/usage.html'
].each {
    def file = new File(basedir, it)
    if (!file.exists()) {
        throw new IllegalStateException(
            "file ${file} doesn't exist"
        )
    }
}

// Acquires the sample HTML content
def html = new File(basedir, 'target/site/index.html').text

// Validates HTML 5
def htmlResponse = new ValidatorBuilder().html().validate(html)

MatcherAssert.assertThat(
    'There are errors',
    htmlResponse.errors(),
    Matchers.describedAs(htmlResponse.toString(), Matchers.hasSize(0))
)
MatcherAssert.assertThat(
    'There are warnings',
    htmlResponse.warnings(),
    Matchers.describedAs(htmlResponse.toString(), Matchers.hasSize(0))
)

// Parses HTML
def body = Jsoup.parse(html).body()

// Verified the heading is set
assert html.contains( '<header class="page-header">' )

// Verifies the skin info is included

// Footer link
assert html.contains( 'Rendered using <a href="https://github.com/Bernardo-MG/docs-maven-skin">Docs Maven Skin</a>' )

// Comment in code
assert html.contains( 'Rendered using Docs Maven Skin' )
assert html.contains( 'Generated by Apache Maven Doxia' )

// Verifies the footer columns exist
def titles = body.select( 'dt' )
assert titles.size() == 3

// Verifies the menus exist
def dropdowns = body.select( '.dropdown-toggle' )
assert dropdowns.size() == 2

// Verifies the icon menus exist
def iconMenu = body.select( 'li > ul.icons-list' )
assert iconMenu.size() == 1

// Verifies the favicon is included
assert html.contains( '<link href="./favicon.ico" rel="shortcut icon" type="image/x-icon" />' )

// Verifies metadata
assert html.contains( '<meta name="description" content="Check the documentation for Basic Maven Project">' )
assert html.contains( '<meta name="keywords" content="Maven, Java, library">' )
assert html.contains( '<meta name="author" content="Bernardo MartÃ­nez Garrido" />' )

// Verifies Open Graph metadata
assert html.contains( '<meta property="og:type" content="website"/>' )
assert html.contains( '<meta property="og:site" content="Simple site example &#x2013; library-maven-archetype-example"/>' )
assert html.contains( '<meta property="og:title" content="Simple site example &#x2013; library-maven-archetype-example"/>' )
assert html.contains( '<meta property="og:description" content="Check the documentation for Basic Maven Project"/>' )

// Verifies Twitter Card metadata
assert html.contains( '<meta name="twitter:card" content="summary"/>' )
assert html.contains( '<meta name="twitter:site" content="@bmg"/>' )
assert html.contains( '<meta name="twitter:title" content="Simple site example &#x2013; library-maven-archetype-example"/>' )
assert html.contains( '<meta name="twitter:description" content="Check the documentation for Basic Maven Project"/>' )

// Verifies the data in the navbar

// Verifies the project information is shown
assert html =~ /<small class="navbar-text">1\.0\.0 \([0-9]+-[0-9]+-[0-9]+\)<\/small>/
